#!/usr/bin/env python3

import subprocess
import sys
import re

def ask_and_fill(agenda_outline):
    filled_agenda = ""
    lines = agenda_outline.splitlines()
    heading_stack = []  # Store the current hierarchy of headings

    for line in lines:
        line = line.strip() #remove leading/trailing whitespace.
        if line.startswith("#"):
            level = line.count("#")
            text = line.strip("# ").strip()
            heading_stack = heading_stack[:level - 1]  # Adjust stack for new level
            heading_stack.append(text)
            prompt = f"Elaborate on the topic: {text}"
            response = subprocess.run(['ask-google-gemini', 's', prompt], capture_output=True, text=True).stdout.strip()
            filled_agenda += line + "\n" + response + "\n\n"

        elif line.startswith("##") or line.startswith("###"):
            level = line.count("#")
            text = line.strip("# ").strip()
            heading_stack = heading_stack[:level - 1]  # Adjust stack for new level
            heading_stack.append(text)
            context = " ".join(heading_stack[:-1])  # Context is the parent headings
            prompt = f"Within the context of {context}, elaborate on the subtopic: {text}"
            response = subprocess.run(['ask-google-gemini', '-s', prompt], capture_output=True, text=True).stdout.strip()
            filled_agenda += line + "\n" + response + "\n\n"

        elif line.strip(r'/^ \{0,\}/').startswith("*"):  # Handle bullet points
            context = " ".join(heading_stack)  # Use the current heading context
            text = line.strip(r'/^ \{0,\}\* /').strip()
            prompt = f"Within the context of {context}, elaborate on the bullet point: {text}"
            response = subprocess.run(['ask-google-gemini', '-s', prompt], capture_output=True, text=True).stdout.strip()
            filled_agenda += line + "\n" + response + "\n\n"

        else:
            filled_agenda += line + "\n"

    return filled_agenda

if __name__ == "__main__":
    if len(sys.argv) > 1:
        agenda_outline = sys.argv[1]
    else:
        agenda_outline = sys.stdin.read()

    filled_agenda = ask_and_fill(agenda_outline)
    print(filled_agenda)
