#!/usr/bin/env python3

import os
import subprocess 
import sys
import time

def ask_and_fill(agenda_outline, prompt_file):
    with open(prompt_file, 'r') as f_in:
        prompt = f_in.read().strip()

    filled_agenda = ""
    lines = agenda_outline.splitlines()
    heading_stack = []

    for line in lines:
        stripped_line = line.strip()

        if stripped_line.startswith("#"):
            level = stripped_line.count("#")
            text = stripped_line.strip("# ").strip()
            heading_stack = heading_stack[:level - 1]
            heading_stack.append(text)
            print(" > ".join(heading_stack))
            prompt_text = f"{prompt}{sys.argv[1]}\n{"|".join(heading_stack)}"
            response = subprocess.run(['ask-google-gemini', '-s', prompt_text], capture_output=True, text=True).stdout.strip()
            f_out.write(response + "\n\n")
            f_out.flush()
            os.fsync(f_out.fileno()) 
            time.sleep(4)


if __name__ == "__main__":
    if len(sys.argv) < 1:
        print("Usage: add_anki_cards <agenda_file> <prompt_file> <output_file>")
        sys.exit(1)

    if len(sys.argv) > 2:
        # Agenda outline is provided as a command-line argument
        output_file = sys.argv[1]
        agenda_file = sys.argv[2]
    else:
        output_file = f"{sys.argv[1]}-anki.txt"
        # Agenda outline is read from stdin (pipe)
        agenda_file = sys.stdin.read()

    prompt_file = './prompts/create-anki-cards.txt' if len(sys.argv) < 3 else sys.argv[3]

    with open(output_file, 'w') as f_out:
        ask_and_fill(agenda_file, prompt_file)

